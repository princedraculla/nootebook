// Code generated by SQLBoiler 4.17.1 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package boiler_models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Contacts", testContacts)
	t.Run("PhoneNumbers", testPhoneNumbers)
}

func TestDelete(t *testing.T) {
	t.Run("Contacts", testContactsDelete)
	t.Run("PhoneNumbers", testPhoneNumbersDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Contacts", testContactsQueryDeleteAll)
	t.Run("PhoneNumbers", testPhoneNumbersQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Contacts", testContactsSliceDeleteAll)
	t.Run("PhoneNumbers", testPhoneNumbersSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Contacts", testContactsExists)
	t.Run("PhoneNumbers", testPhoneNumbersExists)
}

func TestFind(t *testing.T) {
	t.Run("Contacts", testContactsFind)
	t.Run("PhoneNumbers", testPhoneNumbersFind)
}

func TestBind(t *testing.T) {
	t.Run("Contacts", testContactsBind)
	t.Run("PhoneNumbers", testPhoneNumbersBind)
}

func TestOne(t *testing.T) {
	t.Run("Contacts", testContactsOne)
	t.Run("PhoneNumbers", testPhoneNumbersOne)
}

func TestAll(t *testing.T) {
	t.Run("Contacts", testContactsAll)
	t.Run("PhoneNumbers", testPhoneNumbersAll)
}

func TestCount(t *testing.T) {
	t.Run("Contacts", testContactsCount)
	t.Run("PhoneNumbers", testPhoneNumbersCount)
}

func TestHooks(t *testing.T) {
	t.Run("Contacts", testContactsHooks)
	t.Run("PhoneNumbers", testPhoneNumbersHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Contacts", testContactsInsert)
	t.Run("Contacts", testContactsInsertWhitelist)
	t.Run("PhoneNumbers", testPhoneNumbersInsert)
	t.Run("PhoneNumbers", testPhoneNumbersInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("Contacts", testContactsReload)
	t.Run("PhoneNumbers", testPhoneNumbersReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Contacts", testContactsReloadAll)
	t.Run("PhoneNumbers", testPhoneNumbersReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Contacts", testContactsSelect)
	t.Run("PhoneNumbers", testPhoneNumbersSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Contacts", testContactsUpdate)
	t.Run("PhoneNumbers", testPhoneNumbersUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Contacts", testContactsSliceUpdateAll)
	t.Run("PhoneNumbers", testPhoneNumbersSliceUpdateAll)
}
